{
	"Service master": {
		"scope": "javascript",
		"prefix": "service master",
		"body": [
			"import API from './\\$api'",
			"",
			"export default {",
				"\tcreate$2,",
				"\tget$2s,",
				"\tget$2,",
				"\tupdate$2,",
				"\tdelete$2,",
			"}",
			"",
			"function create$2(data) {",
				"\treturn API({",
					"\t\tmethod: 'post',",
					"\t\troute: '/$1s',",
					"\t\tdata",
				"\t})",
			"}",
			"",
			"function get$2s(query) {",
				"\treturn API({",
					"\t\tmethod: 'get',",
					"\t\troute: '/$1s',",
					"\t\tquery",
				"\t})",
			"}",
			"",
			"function get$2($1Id) {",
				"\treturn API({",
					"\t\tmethod: 'get',",
					"\t\troute: `/$1s/${ $1Id }`,",
				"\t})",
			"}",
			"",
			"function update$2($1Id, data) {",
				"\treturn API({",
					"\t\tmethod: 'put',",
					"\t\troute: `/$1s/${ $1Id }`,",
					"\t\tdata",
				"\t})",
			"}",
			"",
			"function delete$2($1Id) {",
				"\treturn API({",
					"\t\tmethod: 'delete',",
					"\t\troute: `/$1s/${ $1Id }`,",
				"\t})",
			"}",
		]
	},

	"View master": {
		"scope": "svelte",
		"prefix": "view master",
		"body": [
			"<script>",
				"",
				"\timport { $2Store } from '../stores'",
				"",
				"\timport Menu from '../\\$layouts/menu.svelte'",
				"\timport Session from '../\\$layouts/session.svelte'",
				"",
				"\timport Modal from '../\\$components/modal.svelte'",
				"\timport Button from '../\\$components/button.svelte'",
				"",
				"\timport $2s from '../$1s/$1s.svelte'",
				"\timport $2Read from '../$1s/$1.read.svelte'",
				"\timport $2Create from '../$1s/$1.create.svelte'",
				"\timport $2Update from '../$1s/$1.update.svelte'",
				"\timport $2Delete from '../$1s/$1.delete.svelte'",
				"",
				"\texport let currentRoute = null",
				"",
			"</script>",
			"",
			"<Menu path={ currentRoute.path } />",
			"",
			"<Session>",
				"\t<$2s />",
			"</Session>",
			"",
			"<Modal id=\"$2Read\" title=\"Información\" >",
				"\t<$2Read />",
				"\t<div class=\"items end\">",
					"\t\t<div class=\"buttons\">",
						"\t\t\t<Button on:click={() => $2Store.modalDelete()} text=\"Borrar\" icon=\"trash\" />",
						"\t\t\t<Button on:click={() => $2Store.modalUpdate()} text=\"Editar\" icon=\"edit\" />",
					"\t\t</div>",
				"\t</div>",
			"</Modal>",
			"",
			"<Modal id=\"$2Create\" title=\"Crear\" >",
				"\t<$2Create on:created={ $2Store.modalClose } on:canceled={ $2Store.modalClose } />",
			"</Modal>",
			"",
			"<Modal id=\"$2Update\" title=\"Editar\" >",
				"\t<$2Update on:updated={ $2Store.modalClose } on:canceled={ $2Store.modalClose } />",
			"</Modal>",
			"",
			"<Modal id=\"$2Delete\" title=\"Borrar\" >",
				"\t<$2Delete on:deleted={ $2Store.modalClose } on:canceled={ $2Store.modalClose } />",
			"</Modal>",
		]
	},

	"Create master": {
		"scope": "svelte",
		"prefix": "create master",
		"body": [
			"<script>",
				"",
				"\timport { createEventDispatcher } from 'svelte'",
				"\timport { $2sStore, ToastStore } from '../stores'",
				"",
				"\timport $2sService from '../\\$services/$1s.service'",
				"",
				"\timport Form from '../\\$components/form.svelte'",
				"\timport Columns from '../\\$components/columns.svelte'",
				"\timport InputText from '../\\$components/input.text.svelte'",
				"",
				"\tconst dispatch = createEventDispatcher()",
				"",
				"\tlet loading = false",
				"\tlet data = {}",
				"",
				"\tasync function create$2() {",
					"",
					"\t\tloading = true",
					"\t\tconst response = await $2sService.create$2(data)",
					"\t\tloading = false",
					"",
					"\t\tif(response.error)",
						"\t\t\treturn ToastStore.error(response.error)",
					"",
					"\t\t$2sStore.append(response.data)",
					"",
					"\t\tToastStore.success('¡creado!')",
					"\t\tdispatch('created')",
				"\t}",
				"",
			"</script>",
			"",
			"<Form on:submit={ create$2 } on:canceled { loading } >",
				"\t<Columns>",
					"\t\t<InputText bind:value={ data.name } label=\"Nombre\" icon=\"tag\" placeholder=\"Ingrese el nombre\" />",
				"\t</Columns>",
			"</Form>",
		]
	},

	"Update master": {
		"scope": "svelte",
		"prefix": "update master",
		"body": [
			"<script>",
				"",
				"\timport { createEventDispatcher } from 'svelte'",
				"\timport { $2Store, $2sStore, ToastStore } from '../stores'",
				"",
				"\timport $2sService from '../\\$services/$1s.service'",
				"",
				"\timport Form from '../\\$components/form.svelte'",
				"\timport Columns from '../\\$components/columns.svelte'",
				"\timport InputText from '../\\$components/input.text.svelte'",
				"",
				"\tconst dispatch = createEventDispatcher()",
				"",
				"\tlet loading = false",
				"\tlet data = {",
					"\t\tname: $$2Store.name,",
				"\t}",
				"",
				"\tasync function update$2() {",
					"",
					"\t\tloading = false",
					"\t\tconst response = await $2sService.update$2($$2Store._id, data)",
					"\t\tloading = true",
					"",
					"\t\tif(response.error)",
						"\t\t\treturn ToastStore.error(response.error)",
					"",
					"\t\t$2sStore.replace(response.data)",
					"",
					"\t\tToastStore.success('¡actualizado!')",
					"\t\tdispatch('updated')",
				"\t}",
				"",
			"</script>",
			"",
			"<Form on:submit={ update$2 } on:canceled { loading } >",
				"\t<Columns>",
					"\t\t<InputText bind:value={ data.name } label=\"Nombre\" icon=\"tag\" placeholder=\"Ingrese el nombre\" />",
				"\t</Columns>",
			"</Form>",
		]
	},

	"Delete master": {
		"scope": "svelte",
		"prefix": "delete master",
		"body": [
			"<script>",
				"",
				"\timport { createEventDispatcher } from 'svelte'",
				"\timport { $2Store, $2sStore, ToastStore } from '../stores'",
				"",
				"\timport $2sService from '../\\$services/$1s.service'",
				"",
				"\timport Columns from '../\\$components/columns.svelte'",
				"\timport Column from '../\\$components/column.svelte'",
				"\timport Form from '../\\$components/form.svelte'",
				"",
				"\tconst dispatch = createEventDispatcher()",
				"",
				"\tlet loading = false",
				"",
				"\tasync function delete$2() {",
					"",
					"\t\tloading = true",
					"\t\tconst response = await $2sService.delete$2($$2Store._id)",
					"\t\tloading = false",
					"",
					"\t\tif(response.error)",
						"\t\t\treturn ToastStore.error(response.error)",
					"",
					"\t\t$2sStore.remove($$2Store._id)",
					"",
					"\t\tToastStore.success('¡borrado!')",
					"\t\tdispatch('deleted')",
				"\t}",
				"",
			"</script>",
			"",
			"<Form on:submit={ delete$2 } on:canceled { loading } >",
				"\t<Columns>",
					"\t\t<Column>",
						"\t\t\t<div class=\"title\">¿Seguro que quieres borrar?</div>",
						"\t\t\t<div class=\"subtitle\">{ $$2Store.name }</div>",
					"\t\t</Column>",
				"\t</Columns>",
			"</Form>",
		]
	},

	"Read master": {
		"scope": "svelte",
		"prefix": "read master",
		"body": [
			"<script>",
				"",
				"\timport { $2Store } from '../stores'",
				"",
				"\timport Utils from '../utils'",
				"",
				"\timport Table from '../\\$components/table.svelte'",
				"",
			"</script>",
			"",
			"<Table items>",
				"\t<tbody>",
					"\t\t<tr>",
						"\t\t\t<th>Nombre</th>",
						"\t\t\t<td>{ $$2Store.name }</td>",
					"\t\t</tr>",
					"\t\t<tr>",
						"\t\t\t<th>Fecha de registro</th>",
						"\t\t\t<td>{ Utils.dateTimeLarge($$2Store.created) }</td>",
					"\t\t</tr>",
				"\t</tbody>",
			"</Table>",
		]
	},

	"Items master": {
		"scope": "svelte",
		"prefix": "items master",
		"body": [
			"<script>",
				"",
				"\timport { onMount } from 'svelte'",
				"\timport { $2sStore, $2Store, ToastStore } from '../stores'",
				"",
				"\timport $2sService from '../\\$services/$1s.service'",
				"\timport Utils from '../utils'",
				"",
				"\timport InputSearch from '../\\$components/input.search.svelte'",
				"\timport Pagination from '../\\$components/pagination.svelte'",
				"\timport Button from '../\\$components/button.svelte'",
				"\timport Table from '../\\$components/table.svelte'",
				"",
				"\tlet loading = false",
				"\tlet query = {}",
				"\tlet metadata = {}",
				"",
				"\tonMount(get$2s)",
				"",
				"\tasync function get$2s() {",
					"",
					"\t\tloading = true",
					"\t\tconst response = await $2sService.get$2s(query)",
					"\t\tloading = false",
					"",
					"\t\tif(response.error)",
						"\t\t\treturn ToastStore.error(response.error)",
					"",
					"\t\t$2sStore.set(response.data.$1s)",
					"\t\tmetadata = response.data.metadata",
				"\t}",
				"",
			"</script>",
			"",
			"<InputSearch on:enter={ get$2s } bind:value={ query.find } />",
			"",
			"<div class=\"items space\">",
				"\t<Button on:click={() => $2Store.modalCreate()} text=\"Agregar\" icon=\"plus\" color=\"primary\" size=\"small\" />",
				"\t<Pagination bind:query bind:metadata />",
			"</div>",
			"",
			"<Table items={ $$2sStore.length } { loading } >",
				"\t<thead>",
					"\t\t<tr>",
						"\t\t\t<th>#</th>",
						"\t\t\t<th>Nombre</th>",
						"\t\t\t<th>Marca</th>",
						"\t\t\t<th>Fecha</th>",
						"\t\t\t<th></th>",
					"\t\t</tr>",
				"\t</thead>",
				"\t<tbody>",
					"\t\t{#each $$2sStore as $1, index}",
						"\t\t\t<tr>",
							"\t\t\t\t<td>{ (index+1) + ( metadata.page * metadata.limit ) }</td>",
							"\t\t\t\t<td>{ $1.name }</td>",
							"\t\t\t\t<td>{ $1.brand }</td>",
							"\t\t\t\t<td>{ Utils.dateLarge($1.created) }</td>",
							"\t\t\t\t<td>",
								"\t\t\t\t\t<Button on:click={() => $2Store.modalRead($1)} icon=\"ellipsis-v\" size=\"small\" />",
							"\t\t\t\t</td>",
						"\t\t\t</tr>",
					"\t\t{/each}",
				"\t</tbody>",
			"</Table>",
		]
	}
}